"use strict";(self.webpackChunkqtrobot_documentation=self.webpackChunkqtrobot_documentation||[]).push([[7053],{8527:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>h});var t=n(5893),o=n(1151),s=n(9656);const i={id:"python_ros_speech",title:"Configure QTrobot TTS language",hide_table_of_contents:!0},a=void 0,c={id:"tutorials/python/python_ros_speech",title:"Configure QTrobot TTS language",description:"signalcellularalt &nbsp;Level:&nbsp; Intermediate",source:"@site/docs/tutorials/python/python_ros_speech.mdx",sourceDirName:"tutorials/python",slug:"/tutorials/python/python_ros_speech",permalink:"/docs/tutorials/python/python_ros_speech",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"python_ros_speech",title:"Configure QTrobot TTS language",hide_table_of_contents:!0},sidebar:"code_tutorials_sidebar",previous:{title:"QTrobot interfaces using ROS Subscribe",permalink:"/docs/tutorials/python/python_ros_subscribe"},next:{title:"QTrobot recording new gesture",permalink:"/docs/tutorials/python/python_ros_record"}},l={},h=[{value:"Create a python project",id:"create-a-python-project",level:2},{value:"Code",id:"code",level:2},{value:"Explanation",id:"explanation",level:2}];function d(e){const r={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(r.admonition,{title:"Overview",type:"info",children:[(0,t.jsxs)(r.p,{children:[(0,t.jsx)(s.Z,{children:"signal_cellular_alt"})," \xa0",(0,t.jsx)(r.strong,{children:"Level:"}),"\xa0 ",(0,t.jsx)(r.em,{children:"Intermediate"}),"\r\n",(0,t.jsx)("br",{})," ",(0,t.jsx)(s.Z,{children:" track_changes "})," \xa0",(0,t.jsx)(r.strong,{children:"Goal:"}),"\xa0 ",(0,t.jsx)(r.em,{children:"learn about how to set a language of QTrobot TTS"}),"\r\n",(0,t.jsx)("br",{})," ",(0,t.jsx)(s.Z,{children:" task_alt "})," \xa0",(0,t.jsx)(r.strong,{children:"Requirements:"})]}),(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["\xa0\xa0",(0,t.jsx)(r.a,{href:"/docs/intro_code",children:"Quick start with coding on QTrobot"})]}),"\n",(0,t.jsxs)(r.li,{children:["\xa0\xa0",(0,t.jsx)(r.a,{href:"/docs/tutorials/python/python_ros_project",children:"Create a ROS python project"})]}),"\n",(0,t.jsxs)(r.li,{children:["\xa0\xa0",(0,t.jsx)(r.a,{href:"/docs/tutorials/python/python_ros_services",children:"QTrobot interfaces using ROS Services"})]}),"\n"]})]}),"\n",(0,t.jsx)(r.admonition,{title:"Note",type:"note",children:(0,t.jsx)(r.p,{children:"This tutorial is for the customers how bought additional TTS languages!"})}),"\n",(0,t.jsxs)(r.p,{children:["In this tutorial you will learn how to set a language for ",(0,t.jsx)(r.a,{href:"/docs/api_ros#speech-interface",children:"QTrobot Speech interface"}),"."]}),"\n",(0,t.jsx)(r.h2,{id:"create-a-python-project",children:"Create a python project"}),"\n",(0,t.jsxs)(r.p,{children:["First we create a python project for our tutorial. let's call it ",(0,t.jsx)(r.code,{children:"tutorial_qt_speech"})," and add the required python file:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:'cd ~/catkin_ws/src\r\ncatkin_create_pkg tutorial_qt_speech rospy roscpp -D "Set QTrobot TTS language"\r\ncd tutorial_qt_speech/src\r\ntouch tutorial_qt_speech_node.py\r\nchmod +x tutorial_qt_speech_node.py\n'})}),"\n",(0,t.jsx)(r.h2,{id:"code",children:"Code"}),"\n",(0,t.jsx)(r.p,{children:"Now lets see how we can change a voice (language) of QTrobot. Following are some standard supported languages:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["\xa0",(0,t.jsx)(r.strong,{children:"en-US"}),"\xa0(American\xa0English)"]}),"\n",(0,t.jsxs)(r.li,{children:["\xa0",(0,t.jsx)(r.strong,{children:"fr-FR"}),"\xa0(French)"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"de-DE"}),"\xa0(German)"]}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"You may have different languages installed on your QTrobot. This tutorial will use English and French language."}),"\n",(0,t.jsxs)(r.p,{children:["Open the ",(0,t.jsx)(r.code,{children:"tutorial_qt_speech_node.py"})," file and add the following code:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"#!/usr/bin/env python\r\nimport sys\r\nimport rospy\r\nfrom std_msgs.msg import String\r\nfrom qt_robot_interface.srv import *\r\n\r\nif __name__ == '__main__':\r\n    rospy.init_node('my_tutorial_node')\r\n    rospy.loginfo(\"my_tutorial_node started!\")\r\n\r\n    # define a ros service\r\n    speechConfig = rospy.ServiceProxy('/qt_robot/speech/config', speech_config)\r\n\r\n    # define a ros service\r\n    speechSay = rospy.ServiceProxy('/qt_robot/speech/say', speech_say)\r\n    \r\n    # block/wait for ros service\r\n    rospy.wait_for_service('/qt_robot/speech/say') \r\n    \r\n    # block/wait for ros service\r\n    rospy.wait_for_service('/qt_robot/speech/config') \r\n   \r\n    try:\r\n        status = speechConfig(\"en-US\",0,0)\r\n        if status:\r\n            speechSay(\"Hello, I am speaking English\")\r\n            status = False\r\n        rospy.sleep(1)\r\n        status = speechConfig(\"fr-FR\",0,0)\r\n        if status:\r\n            speechSay(\"Bonjour, Je parle fran\xe7ais\")\r\n        \r\n\r\n    except KeyboardInterrupt:\r\n        pass\r\n\r\n    rospy.loginfo(\"finsihed!\")\r\n\n"})}),"\n",(0,t.jsx)(r.h2,{id:"explanation",children:"Explanation"}),"\n",(0,t.jsxs)(r.p,{children:["ROS Services are defined by srv files, which contains a request message and a response message. First we import all from ",(0,t.jsx)(r.code,{children:"qt_robot_interface.srv"}),". This will import all srv files that are under ",(0,t.jsx)(r.code,{children:"qt_robot_interface.srv"}),". We need to use ",(0,t.jsx)(r.code,{children:"speech_config"}),"."]}),"\n",(0,t.jsxs)(r.admonition,{title:"Tip",type:"tip",children:[(0,t.jsx)(r.p,{children:"How do we know which service an interface uses? well, There is a useful command in ROS which tells you that:"}),(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"rosservice info /qt_robot/speech/config\r\nType: qt_robot_interface/speech_config\r\nArgs: language pitch speed\r\n...\n"})})]}),"\n",(0,t.jsxs)(r.p,{children:["Then we defined a service ",(0,t.jsx)(r.code,{children:"/qt_robot/speech/config"})," and call ",(0,t.jsx)(r.code,{children:"rospy.wait_for_service()"}),' to block until a service is available.\r\nFinally we called a ROS service with a wanted language and if everything is ok service will return "True". After that we call ',(0,t.jsx)(r.code,{children:"/qt_robot/speech/say"})," service with text message to check the configured language."]})]})}function p(e={}){const{wrapper:r}={...(0,o.a)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);