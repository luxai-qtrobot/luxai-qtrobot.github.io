"use strict";(self.webpackChunkqtrobot_documentation=self.webpackChunkqtrobot_documentation||[]).push([[831],{1755:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>p,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var o=r(5893),t=r(1151),s=r(9656);const i={id:"python_ros_respeaker",title:"Using QTrobot microphone",hide_table_of_contents:!0},a="Using QTrobot ReSpeaker microphone",c={id:"tutorials/python/python_ros_respeaker",title:"Using QTrobot microphone",description:"signalcellularalt &nbsp;Level:&nbsp; Advanced",source:"@site/versioned_docs/version-QTRD_v1/tutorials/python/python_ros_respeaker.mdx",sourceDirName:"tutorials/python",slug:"/tutorials/python/python_ros_respeaker",permalink:"/docs/v1/tutorials/python/python_ros_respeaker",draft:!1,unlisted:!1,tags:[],version:"QTRD_v1",frontMatter:{id:"python_ros_respeaker",title:"Using QTrobot microphone",hide_table_of_contents:!0},sidebar:"code_tutorials_sidebar",previous:{title:"Human hands detection",permalink:"/docs/v1/tutorials/python/python_ros_hands"},next:{title:"Offline speech recognition",permalink:"/docs/v1/tutorials/python/python_ros_vosk"}},p={},d=[{value:"QTrobot ReSpeaker Application",id:"qtrobot-respeaker-application",level:2},{value:"Installation",id:"installation",level:3},{value:"1. Install python3 requirements (QTRP)",id:"1-install-python3-requirements-qtrp",level:4},{value:"2. Clone audio_common repository (QTRP)",id:"2-clone-audio_common-repository-qtrp",level:4},{value:"2. Link to catkin workspace (QTRP)",id:"2-link-to-catkin-workspace-qtrp",level:4},{value:"3. Build ROS package (QTRP)",id:"3-build-ros-package-qtrp",level:4},{value:"Launching QTrobot ReSpeaker App",id:"launching-qtrobot-respeaker-app",level:3},{value:"Run automatically on reboot",id:"run-automatically-on-reboot",level:3},{value:"Topics",id:"topics",level:3},{value:"Record audio data on QTPC",id:"record-audio-data-on-qtpc",level:2},{value:"Create a python project",id:"create-a-python-project",level:3},{value:"Code",id:"code",level:3}];function l(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"using-qtrobot-respeaker-microphone",children:"Using QTrobot ReSpeaker microphone"}),"\n","\n","\n",(0,o.jsxs)(n.admonition,{title:"Overview",type:"info",children:[(0,o.jsxs)(n.p,{children:[(0,o.jsx)(s.Z,{children:"signal_cellular_alt"})," \xa0",(0,o.jsx)(n.strong,{children:"Level:"}),"\xa0 ",(0,o.jsx)(n.em,{children:"Advanced"}),"\n",(0,o.jsx)("br",{})," ",(0,o.jsx)(s.Z,{children:" track_changes "})," \xa0",(0,o.jsx)(n.strong,{children:"Goal:"}),"\xa0 ",(0,o.jsx)(n.em,{children:"learn how to use ReSpeaker microphone"}),"\n",(0,o.jsx)("br",{})," ",(0,o.jsx)(s.Z,{children:" task_alt "})," \xa0",(0,o.jsx)(n.strong,{children:"Requirements:"})]}),(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\xa0\xa0",(0,o.jsx)(n.a,{href:"/docs/intro_code",children:"Quick start with coding on QTrobot"})]}),"\n",(0,o.jsxs)(n.li,{children:["\xa0\xa0",(0,o.jsx)(n.a,{href:"/docs/tutorials/python/python_ros_project",children:"Create a ROS python project"})]}),"\n",(0,o.jsxs)(n.li,{children:["\xa0\xa0",(0,o.jsx)(n.a,{href:"/docs/tutorials/python/python_ros_publish",children:"QTrobot interfaces using ROS Topics"})]}),"\n"]})]}),"\n",(0,o.jsx)(n.p,{children:"In this tutorial you will learn how to record simple data from QTrobot ReSpeaker Microphone."}),"\n",(0,o.jsx)(n.h2,{id:"qtrobot-respeaker-application",children:"QTrobot ReSpeaker Application"}),"\n",(0,o.jsxs)(n.p,{children:["To record the microphone data we need to run QTrobot ReSpeaker app, which is using ",(0,o.jsx)(n.a,{href:"https://wiki.seeedstudio.com/ReSpeaker_Mic_Array_v2.0",children:"ReSpeaker Mic Array v2.0"})]}),"\n",(0,o.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,o.jsx)(n.admonition,{title:"Warning",type:"warning",children:(0,o.jsx)(n.p,{children:(0,o.jsxs)(n.strong,{children:["Do not install any ROS package on QTRP via ",(0,o.jsx)(n.code,{children:"apt"})," commmand"]})})}),"\n",(0,o.jsxs)(n.p,{children:["You can skip this part if the app is already installed ",(0,o.jsx)(n.code,{children:"rospack find qt_respeaker_app"})," on your system (QTRP).\nIf you get this error ",(0,o.jsx)(n.code,{children:"[rospack] Error: package 'qt_respeaker_app' not found"})," follow next steps."]}),"\n",(0,o.jsxs)(n.p,{children:["Please notice that this should be installed on QTRP running with python3.\nThis should be in ",(0,o.jsx)(n.code,{children:"/home/qtrobot/robot/code/software/apps"})," folder on QTRP."]}),"\n",(0,o.jsx)(n.p,{children:"Get the latest version (ssh to QTRP):"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"cd ~/robot/code/software\ngit pull\n"})}),"\n",(0,o.jsx)(n.p,{children:"If the folder doesn't exists:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"cd ~/robot/code/\ngit clone https://github.com/luxai-qtrobot/software.git\n"})}),"\n",(0,o.jsx)(n.h4,{id:"1-install-python3-requirements-qtrp",children:"1. Install python3 requirements (QTRP)"}),"\n",(0,o.jsxs)(n.p,{children:["Go to ",(0,o.jsx)(n.code,{children:"qt_respeaker_app"})," folder and install python requirements:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"cd ~/robot/code/software/apps/qt_respeaker_app\nsudo pip3 install -r requirements.txt\n"})}),"\n",(0,o.jsx)(n.h4,{id:"2-clone-audio_common-repository-qtrp",children:"2. Clone audio_common repository (QTRP)"}),"\n",(0,o.jsx)(n.p,{children:"Clone the audio_common git repository to the home folder."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"cd ~\ngit clone https://github.com/ros-drivers/audio_common.git\n"})}),"\n",(0,o.jsx)(n.h4,{id:"2-link-to-catkin-workspace-qtrp",children:"2. Link to catkin workspace (QTRP)"}),"\n",(0,o.jsxs)(n.p,{children:["On QTRP make a symlink in ",(0,o.jsx)(n.code,{children:"~/catkin_ws/src"})," to ",(0,o.jsx)(n.code,{children:"qt_respeaker_app"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"cd ~/catkin_ws/src\nln -s ~/robot/code/software/apps/qt_respeaker_app .\n"})}),"\n",(0,o.jsxs)(n.p,{children:["From audio_common we will need just audio_common_msgs. Link just ",(0,o.jsx)(n.code,{children:"audio_common_msgs"})," to catkin_ws."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"cd ~/catkin_ws/src\nln -s ~/audio_common/audio_common_msgs .\n"})}),"\n",(0,o.jsx)(n.h4,{id:"3-build-ros-package-qtrp",children:"3. Build ROS package (QTRP)"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"cd ~/catkin_ws/\ncatkin_make -j2\n"})}),"\n",(0,o.jsx)(n.h3,{id:"launching-qtrobot-respeaker-app",children:"Launching QTrobot ReSpeaker App"}),"\n",(0,o.jsx)(n.admonition,{title:"NOTICE",type:"note",children:(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"qt_respeaker_app"})," exclusively needs to access the ReSpeaker mic device. This means that you need to stop any other apps\nwhich are accessing the microphone before launching the ",(0,o.jsx)(n.code,{children:"qt_respeaker_app"}),".  For example, if ",(0,o.jsx)(n.code,{children:"qt_vosk_app"})," is running, you need to disable it\nin the autostart of QTRP (i.e. commenting the corresponding line) and reboot the robot!"]})}),"\n",(0,o.jsxs)(n.p,{children:["Go to qt_respeaker_app folder and execute ",(0,o.jsx)(n.code,{children:"start_qt_respeaker_app.sh"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"cd ~/catkin_ws/src/qt_respeaker_app/autostart\n./start_qt_respeaker_app.sh\n"})}),"\n",(0,o.jsx)(n.p,{children:"To check that the qt_respeaker_app is running open another terminal and try:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"rostopic list\n"})}),"\n",(0,o.jsx)(n.p,{children:"You should see all qt_respeaker_app topics:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"/qt_respeaker_app/channel0\n/qt_respeaker_app/channel1\n/qt_respeaker_app/channel2\n/qt_respeaker_app/channel3\n/qt_respeaker_app/channel4\n/qt_respeaker_app/channel5\n/qt_respeaker_app/is_speaking\n/qt_respeaker_app/sound_direction\n"})}),"\n",(0,o.jsx)(n.h3,{id:"run-automatically-on-reboot",children:"Run automatically on reboot"}),"\n",(0,o.jsx)(n.p,{children:"Copy autostart script to QTRP autostart folder:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"cp ~/robot/code/software/apps/qt_respeaker_app/autostart/start_qt_respeaker_app.sh ~/robot/autostart\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Edit ",(0,o.jsx)(n.code,{children:"autostart_screens.sh"}),":"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"sudo nano ~/robot/autostart/autostart_screens.sh\n"})}),"\n",(0,o.jsx)(n.p,{children:"Add this line below other scripts"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'run_script "start_qt_respeaker_app.sh"\n'})}),"\n",(0,o.jsx)(n.h3,{id:"topics",children:"Topics"}),"\n",(0,o.jsxs)(n.p,{children:["QTrobot ReSpeaker app extracts data from ",(0,o.jsx)(n.a,{href:"https://wiki.seeedstudio.com/ReSpeaker_Mic_Array_v2.0",children:"ReSpeaker Mic Array v2.0"})," and publishes to following topics:"]}),"\n",(0,o.jsx)(n.p,{children:"Publisher:"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"/qt_respeaker_app/channel0"}),"\nChannel 0: processed audio for ASR"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"/qt_respeaker_app/channel1"}),"\nChannel 1: mic1 raw data"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"/qt_respeaker_app/channel2"}),"\nChannel 2: mic2 raw data"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"/qt_respeaker_app/channel3"}),"\nChannel 3: mic3 raw data"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"/qt_respeaker_app/channel4"}),"\nChannel 4: mic4 raw data"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"/qt_respeaker_app/channel5"}),"\nChannel 5: merged playback"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"/qt_respeaker_app/is_speaking"}),"\nVAD (Voice Activity Detection)"]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"/qt_respeaker_app/sound_direction"}),"\nDOA (Direction of Arrival)"]}),"\n",(0,o.jsx)(n.h2,{id:"record-audio-data-on-qtpc",children:"Record audio data on QTPC"}),"\n",(0,o.jsx)(n.h3,{id:"create-a-python-project",children:"Create a python project"}),"\n",(0,o.jsxs)(n.p,{children:["First we create a python project for our tutorial. let's call it ",(0,o.jsx)(n.code,{children:"tutorial_qt_respeaker"})," and add the required python file:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'cd ~/catkin_ws/src\ncatkin_create_pkg tutorial_qt_respeaker std_msgs rospy roscpp -D "Record microphone data"\ncd tutorial_qt_respeaker/src\ntouch tutorial_qt_respeaker_node.py\nchmod +x tutorial_qt_respeaker_node.py\n'})}),"\n",(0,o.jsx)(n.h3,{id:"code",children:"Code"}),"\n",(0,o.jsxs)(n.p,{children:["Open the ",(0,o.jsx)(n.code,{children:"tutorial_qt_respeaker_node.py"})," file and the add the following code:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"#!/usr/bin/env python3\nimport wave\nimport rospy\nfrom audio_common_msgs.msg import AudioData\n\n\nAUDIO_RATE = 16000\nAUDIO_CHANNELS = 1\nAUDIO_WIDTH = 2\n\n\ndef channel_callback(msg, wf):\n    wf.writeframes(msg.data)\n\n# main\nif __name__ == '__main__':\n    # call the relevant service\n    rospy.init_node('audio_record')\n    \n    wf = wave.open(\"audio.wav\", 'wb')\n    wf.setnchannels(AUDIO_CHANNELS)\n    wf.setsampwidth(AUDIO_WIDTH)\n    wf.setframerate(AUDIO_RATE)\n        \n    rospy.Subscriber('/qt_respeaker_app/channel0', AudioData, channel_callback, wf)\n\n    print(\"recording...\")\n    rospy.spin()\n    print(\"saving...\")\n    wf.close()\n\n"})}),"\n",(0,o.jsxs)(n.p,{children:["This will record processed audio for ASR from channel 0 and save it into ",(0,o.jsx)(n.code,{children:"audio.wav"}),", which you can later process or listen to it.\nBy default we setup some tuning parameters for noise reduction and automatic gain in ",(0,o.jsx)(n.code,{children:"config/qt_respeaker_app.yaml"})," which can be modified.\nIf you would like to change the gain of the microphone, you just need to change the  line ",(0,o.jsx)(n.code,{children:"AGCGAIN: 100.0"})," in ",(0,o.jsx)(n.code,{children:"config/qt_respeaker_app.yaml"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);